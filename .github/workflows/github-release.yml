# Action to update repository changelog, bump release versions and generate GitHub release tag.
name: Changelog|GitHub Release

permissions:
  contents: write

on:
  push:
    branches:
      - main  # or your default branch name

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for full commit history

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm install standard-version
        working-directory: ./demo

      - name: Bump version and generate changelog
        id: version-bump
        run: |
          # Initialize CHANGELOG.md if it doesn't exist
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            git add CHANGELOG.md
            git commit -m "docs: initialize changelog" || true
          fi

          # Change directory after creating CHANGELOG.md
          # cd ./demo
          npx standard-version --skip.commit --skip.tag

          # Get new version
          NEW_VERSION=$(node -p "require('./demo/package.json').version")
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Commit changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json CHANGELOG.md
          git commit -m "chore(release): $NEW_VERSION" || echo "No changes to commit"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: ${{ steps.version-bump.outputs.tag_name }}
          name: Release ${{ steps.version-bump.outputs.tag_name }}
          body: |
            See [CHANGELOG.md](CHANGELOG.md) for details.
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
